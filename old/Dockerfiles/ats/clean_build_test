#!/usr/bin/env bash
# Helpful for `git bisect run`.

# Build ATS using the /opt/openssl-quic version of OpenSSL.

set -e
set -x
expected_dirname="${HOME}/src"
fail()
{
  echo $1
  exit 1
}

repo_name=`basename $(pwd)`
src_dir="${HOME}/src/${repo_name}"
build_dir="${HOME}/build/${repo_name}"
test_dir=${src_dir}/tests

[ -d "${src_dir}" ] || fail "Cannot find source directory: $src_dir"
[ -d "${test_dir}" ] || fail "Cannot find source directory: $test_dir"
cd ${src_dir}
openssl="/opt/openssl-quic"

command="autoreconf -fi && ./configure --prefix ${build_dir} --with-openssl=${openssl}--enable-experimental-plugins --enable-example-plugins --enable-werror --enable-debug --enable-wccp"
dirname=$(dirname $(pwd))
[ "${dirname}" = "${expected_dirname}" ] || fail "Expected to be in: ${expected_dirname}. Not running: ${command}"

source /opt/rh/gcc-toolset-11/enable
# Make sure we get the quic-version of curl.
export PATH=/opt/bin:${PATH}
if [ -d "${build_dir}" ]
then
  git clean -d -x -f -f -q
  rm -rf ${build_dir}
fi

commit=`git rev-parse --short HEAD`
tmp_dir=/tmp/build_and_run/${commit}
tmp_build_out=${tmp_dir}/build.txt
mkdir -p ${tmp_dir}
autoreconf -fi > ${tmp_build_out} 2>&1
./configure --prefix ${build_dir} --with-openssl=${openssl} --enable-experimental-plugins --enable-example-plugins --enable-werror --enable-debug --enable-wccp > ${tmp_build_out} 2>&1
bear -- make -j $(nproc) > ${tmp_build_out} 2>&1
make install > ${tmp_build_out} 2>&1

cd ${test_dir}
./autest.sh --sandbox /tmp/sb --ats-bin ~/build/ts_asf_master_address_0rtt_autest_failure/bin/ --clean=none $@
if [ $? -eq 0 ]
then
  echo
  echo
  echo "Test passed!"
  exit 0
else
  echo
  echo
  echo "Test failed!"
  exit 1
fi
