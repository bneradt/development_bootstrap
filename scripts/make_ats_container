#!/usr/bin/env bash

usage="$(basename $0) <docker_image> <container_name>"

fail()
{
  echo $1
  exit 1
}

set -e

[ -n "${HOME}" ] || fail "HOME is not set."
[ $# -eq 2 ] || fail "Not enough parameters: ${usage}"
docker_image=${1}; shift
container_name=${1}; shift

# Select a random free port.
free_port=`netstat -aln | awk '
  $6 == "LISTEN" {
    if ($4 ~ "[.:][0-9]+$") {
      split($4, a, /[:.]/);
      port = a[length(a)];
      p[port] = 1
    }
  }
  END {
    srand();
    start = int(3000 + rand()*10000);
    for (i = start; i < 65000 && p[i]; i++){};
    if (i == 65000) {exit 1};
    print i
  }
'`

docker_username=$(docker run --rm -it ${docker_image} 'whoami' | tr -d '[:space:]')

YUBI_ARGUMENT=""
if [ -d ${HOME}/.yubiagent ]
then
  YUBI_ARGUMENT="-v /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock -v ${HOME}/.ssh/sshca:/home/${docker_username}/.ssh/sshca -e SSH_AUTH_SOCK=/run/host-services/ssh-auth.sock"
fi

# Before bpftrace used --cap-add=SYS_PTRACE. With bpftrace we use --privileged.
docker run \
  --name ${container_name} \
  --init \
  --privileged \
  --network=host \
  -u ${docker_username} \
  -d \
  -t \
  -v ${HOME}/.ssh:/home/${docker_username}/.ssh:Z \
  ${YUBI_ARGUMENT} \
  ${docker_image}

branch_name=${container_name}
docker exec -u ${docker_username} ${container_name} /home/${docker_username}/bin/start_ats_project ${branch_name}

echo
echo "Enter the container with:"
echo "docker exec -it -u ${docker_username} ${container_name} /bin/bash"
echo
echo "Enter the tmux session with:"
echo "tmux attach -t ${branch_name}"
