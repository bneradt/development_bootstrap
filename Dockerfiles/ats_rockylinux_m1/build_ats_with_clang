#!/usr/bin/env bash

# Build ATS using the /opt/openssl-quic version of OpenSSL.

set -e
set -x
expected_dirname="${HOME}/src"
fail()
{
  echo $1
  exit 1
}

openssl="/opt/openssl-quic"

repo_name=`basename $(pwd)`
build_dir="${HOME}/build/${repo_name}"
command="autoreconf -fi && ./configure --prefix ${build_dir} --with-openssl=${openssl}--enable-experimental-plugins --enable-example-plugins --enable-werror --enable-debug --enable-wccp"
dirname=$(dirname $(pwd))
[ "${dirname}" = "${expected_dirname}" ] || fail "Expected to be in: ${expected_dirname}. Not running: ${command}"

# https://github.com/apache/trafficserver/blob/33cc7990a88c1ad04de63fd94f8b937ba50a92e7/ci/jenkins/bin/environment.sh#L77
echo "Building with:"
which clang
export CC=`which clang`
export CXX=`which clang++`
export CXXFLAGS="-Qunused-arguments"
export WITH_LIBCPLUSPLUS="yes"

# Make sure we get the quic-version of curl.
export PATH=/opt/bin:${PATH}
if [ -d "${build_dir}" ]
then
  while true; do
    read -p "${build_dir} already exists. Clean it? (y/n) " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit 0;;
        * ) echo "Please answer y or n.";;
    esac
  done

  git clean -d -x -f -f -q
  rm -rf ${build_dir}
fi
autoreconf -fi
./configure --prefix ${build_dir} --with-openssl=${openssl} --enable-experimental-plugins --enable-example-plugins --enable-werror --enable-debug --enable-wccp
bear -- make -j $(nproc)
make install
